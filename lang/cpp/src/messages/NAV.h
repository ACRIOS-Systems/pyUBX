// File lang/cpp/src/messages/NAV.h
// Auto-generated by pyUBX generateCpp.py v0.1 on 2020-02-29T14:59:42.946391
// See https://github.com/mayeranalytics/pyUBX
// DO NOT MODIFY THIS FILE!

#ifndef __NAV_H__
#define __NAV_H__

#include <stdint.h>
#include "../UBX.h"

/* Message class NAV.
 */
struct NAV
{
    struct DOP;
    struct SVINFO;
};

struct NAV::DOP : public Message
{
    uint32_t iTOW;
    uint16_t gDOP;
    uint16_t pDOP;
    uint16_t tDOP;
    uint16_t vDOP;
    uint16_t hDOP;
    uint16_t nDOP;
    uint16_t eDOP;

    static uint8_t classID;
    static uint8_t messageID;
};

uint8_t NAV::DOP::classID   = 0x01;
uint8_t NAV::DOP::messageID = 0x04;

struct NAV::SVINFO : public Message
{
    uint32_t iTOW;
    uint8_t numCh;
    uint8_t globalFlags;
    uint16_t reserved1;

    struct Repeated {
        uint8_t chn;
        uint8_t svid;
        uint8_t flags;
        uint8_t quality;
        uint8_t cno;
        int8_t elev;
        int16_t axim;
        int32_t prRes;
    };
    typedef _iterator<NAV::SVINFO::Repeated> iterator;
    static _iterator<Repeated> iter(char*data, size_t size) {
        return _iterator<Repeated>(data+sizeof(NAV::SVINFO), size-sizeof(NAV::SVINFO));
    }
    static _iterator<Repeated> iter(NAV::SVINFO& msg, size_t size) {
        return iter((char*)(&msg), size);
    }
    static size_t size(size_t n) { return sizeof(NAV::SVINFO) + n*sizeof(NAV::SVINFO::Repeated); }

    static uint8_t classID;
    static uint8_t messageID;
};

uint8_t NAV::SVINFO::classID   = 0x01;
uint8_t NAV::SVINFO::messageID = 0x30;

#endif // ifndef __NAV_H__
