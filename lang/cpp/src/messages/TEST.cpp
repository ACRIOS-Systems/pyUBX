// File lang/cpp/src/messages/TEST.cpp
// Auto-generated by pyUBX generateCPP.py v0.1 on 2023-04-08T18:03:13.559127
// See https://github.com/mayeranalytics/pyUBX
// DO NOT MODIFY THIS FILE!

 #include "TEST.hpp"
#include <sstream>

const std::string classIDName("TEST");

uint8_t ubx::TEST::TEST::getClassId(void) const { return ubx::TEST::classID; }
uint8_t ubx::TEST::TEST::getMessageId(void) const { return messageID; }
const std::string &ubx::TEST::TEST::getClassName(void) const { return classIDName; }
std::string ubx::TEST::TEST::getMessageName(void) const { return std::string("TEST"); };
std::string ubx::TEST::TEST::getDescription(void) const {
    std::stringstream ret;
    ret << "{\"classId\":" << std::to_string(getClassId()) << ",\"messageId\":" << std::to_string(getMessageId()) << ",\"classIdName\":\"" << getClassName() << "\",\"messageIdName\":\"" << getMessageName() << "\"";
    ret << ", \"first\":" << std::to_string(data.first) << ", \"second\":" << std::to_string(data.second);
    for (uint16_t i = 0; i < repeatedLen; i++) { ret << ", \"ext[" << i << "]\":" << std::to_string(data.repeated[i].ext);}
    ret << "}";
    return ret.str();
}
uint8_t* ubx::TEST::TEST::getDataStartAddress(void) const { return (uint8_t*)&data; }
uint16_t ubx::TEST::TEST::getDataSize(void) const { return sizeof(data) + (repeatedLen * repeatedSize); }
const uint16_t ubx::TEST::TEST::repeatedSize = sizeof(struct ubx::TEST::TEST::_data::_repeated);
