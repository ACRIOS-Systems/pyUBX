// File lang/cpp/src/messages/ESF.cpp
// Auto-generated by pyUBX generateCPP.py v0.2 on 2023-06-06T19:57:04.613873
// See https://github.com/mayeranalytics/pyUBX
// DO NOT MODIFY THIS FILE!

 #include "ESF.hpp"
#include <sstream>

const std::string classIDName("ESF");

uint8_t ubx::ESF::MEAS::getClassId(void) const { return ubx::ESF::classID; }
uint8_t ubx::ESF::MEAS::getMessageId(void) const { return messageID; }
const std::string &ubx::ESF::MEAS::getClassName(void) const { return classIDName; }
std::string ubx::ESF::MEAS::getMessageName(void) const { return std::string("MEAS"); };
std::string ubx::ESF::MEAS::getDescription(void) const {
    std::stringstream ret;
    ret << "{\"classId\":" << std::to_string(getClassId()) << ",\"messageId\":" << std::to_string(getMessageId()) << ",\"classIdName\":\"" << getClassName() << "\",\"messageIdName\":\"" << getMessageName() << "\"";
    ret << ", \"timeTag\":" << std::to_string(data.timeTag) << ", \"flags\":" << std::to_string(data.flags) << ", \"id\":" << std::to_string(data.id);
    for (uint16_t i = 0; i < repeatedLen; i++) { ret << ", \"data[" << i << "]\":" << std::to_string(data.repeated[i].data);}
    ret << "}";
    return ret.str();
}
uint8_t* ubx::ESF::MEAS::getDataStartAddress(void) const { return (uint8_t*)&data; }
uint16_t ubx::ESF::MEAS::getDataSize(void) const { return sizeof(data) + (repeatedLen * repeatedSize); }
const uint16_t ubx::ESF::MEAS::repeatedSize = sizeof(struct ubx::ESF::MEAS::_data::_repeated);
